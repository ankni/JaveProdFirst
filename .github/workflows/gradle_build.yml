name: Java_CI_with_Gradle

on:
  push:
    branches: ["main", "feature/add-upgrade"]
  pull_request:
    branches: ["main"]

jobs:

  test_job:
    uses: ankni/JaveProdFirst/.github/workflows/test_template.yml@feature/add-upgrade

  env_job:
    runs-on: ubuntu-latest
    outputs:
      user_name: ${{ steps.set_user_name.outputs.user_name }}

    steps:
    - name: Get current user
      id: set_user_name
      run: |
        USER_NAME=$(whoami)
        echo "USER_NAME=$USER_NAME" >> $GITHUB_ENV
        echo "::set-output name=user_name::$USER_NAME"
        echo "User Name is: $USER_NAME"  # Выведем имя пользователя для отладки

  build_job:
    runs-on: ubuntu-latest
    needs: [test_job, env_job]  # Указываем обе зависимости
    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Grant execute permission to Gradle
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build --warning-mode all   

    - name: Debug Check build output
      working-directory: build/libs
      run: ls -la
    
    - name: Rename JAR for Docker
      run: mv build/libs/*.jar build/libs/app.jar

    - name: Verify JAR before Docker
      run: ls -la build/libs/app.jar

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get env
      run: |
        echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')" >> $GITHUB_ENV
        echo "USER_NAME=${{ needs.env_job.outputs.user_name }}" >> $GITHUB_ENV
        echo "User Name is: ${{ needs.env_job.outputs.user_name }}"  # Проверяем вывод значения USER_NAME

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ vars.REPO_NAME }}:V-${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}
